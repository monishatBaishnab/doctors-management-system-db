generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model doctors {
  doctor_id      Int            @id @default(autoincrement())
  first_name     String         @db.VarChar(255)
  last_name      String         @db.VarChar(255)
  email          String         @unique @db.VarChar(255)
  phone_number   String?        @db.VarChar(255)
  address        String?        @db.VarChar(255)
  specialization String?        @db.VarChar(255)
  appointment    appointments[]
  departments    departments?
}

enum gender {
  mail
  femail
}

model patients {
  patient_id      Int              @id @default(autoincrement())
  first_name      String           @db.VarChar(255)
  last_name       String           @db.VarChar(255)
  email           String           @unique @db.VarChar(255)
  phone_number    String?          @db.VarChar(255)
  address         String?          @db.VarChar(255)
  date_of_birth   DateTime?
  gender          gender?
  appointment     appointments[]
  medical_records medical_records?
}

model medical_records {
  record_id   Int      @id @default(autoincrement())
  patient_id  Int      @unique
  patient     patients @relation(fields: [patient_id], references: [patient_id])
  diagnosis   String?  @db.VarChar(255)
  treatment   String   @db.VarChar(255)
  record_date String   @db.VarChar(255)
}

enum appointment_status {
  scheduled
  completed
  cancelled
}

model appointments {
  appointment_id   Int                @id @default(autoincrement())
  doctor_id        Int
  doctro           doctors            @relation(fields: [doctor_id], references: [doctor_id])
  patient_id       Int
  patient          patients           @relation(fields: [patient_id], references: [patient_id])
  appointment_date DateTime
  status           appointment_status
  prescription     prescriptions?
}

model prescriptions {
  prescription_id Int          @id @default(autoincrement())
  appointment_id  Int          @unique
  appointment     appointments @relation(fields: [appointment_id], references: [appointment_id])
  medication      String       @db.VarChar(255)
  dosage          String       @db.VarChar(255)
  instructions    String?      @db.VarChar(255)
}

model departments {
  department_id   Int     @id @default(autoincrement())
  department_name String  @db.VarChar(255)
  department_head Int     @unique
  doctor          doctors @relation(fields: [department_head], references: [doctor_id])
}
